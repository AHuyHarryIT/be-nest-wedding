// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String?
  password  String
  // relation
  roles     UserRole[]
  // timestamps
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Role {
  id             String           @id @default(uuid())
  name           String           @unique
  description    String?
  // relation
  users          UserRole[]
  RolePermission RolePermission[]
  // timestamps
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Permission {
  id          String           @id @default(uuid())
  key         String           @unique
  description String?
  // relation
  roles       RolePermission[]
  // timestamps
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model UserRole {
  userId String
  roleId String
  // relation
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model RolePermission {
  roleId       String
  permissionId String
  // relation
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}
